//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StylesheetUi2.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StylesheetUi2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok, here is the XSLT stylesheet that should provide the functionality you&apos;re looking for:
        ///&lt;?xml version=&apos;1.0&apos;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:a=&quot;http://jackhenry.com/jxchange/TPG/2008&quot; xmlns:s=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&gt;
        ///    &lt;xsl:template match=&quot;/&quot;&gt;
        ///        &lt;WorkflowTranslatedResponse&gt;
        ///            &lt;VariableMap&gt;
        ///                &lt;ActivityMapVariable&gt;
        ///                    &lt;VariableName&gt;SynergyIndexes&lt;/VariableName&gt;
        ///                    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string assistant1 {
            get {
                return ResourceManager.GetString("assistant1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To translate the string &quot;mmousehst@jhahosting.com&quot; to &quot;mmousehst@jackhenry.com&quot;, you can use the `Replace` function in Visual Basic to replace the substring &quot;jhahosting&quot; with &quot;jackhenry&quot;.
        ///
        ///Here&apos;s the code you would need (only the right side of the assignment as per your instructions):
        ///
        ///```vb.net
        ///Replace(someString, &quot;jhahosting&quot;, &quot;jackhenry&quot;)
        ///```
        ///
        ///So, you&apos;d use the above code to get the desired translation for your `newString`..
        /// </summary>
        internal static string assistant2 {
            get {
                return ResourceManager.GetString("assistant2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For the reponse below, I need to assign all the CustId node values to a variable named CustomerIdNumbers
        ///&lt;s:Envelope xmlns:s=http://schemas.xmlsoap.org/soap/envelope/ xmlns:u=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&gt;
        ///    &lt;s:Header&gt;
        ///        &lt;o:Security s:mustUnderstand=&quot;1&quot; xmlns:o=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&gt;
        ///            &lt;u:Timestamp u:Id=&quot;_0&quot;&gt;
        ///                &lt;u:Created&gt;2023-08-05T01:02:44.765Z&lt;/u:Created&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sampleRequest {
            get {
                return ResourceManager.GetString("sampleRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I have the following variables: accountArray=“2524,D,5-Pending Closed,Primary,3727,D,0-Escheat,Primary,” I want to extract the third value and assign it to a variable like : AcctStat = 5-Pending Closed What built-in VisualBasic method or methods would be needed to accomplish this?.
        /// </summary>
        internal static string sampleRequest2 {
            get {
                return ResourceManager.GetString("sampleRequest2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are a program that helps a user work with a SOAP API that returns XML responses. An XSLT stylesheet is used to transform the response so that variables are defined and assigned values from the original response. You will help the user identify which elements from the reponse need to be assigned to a variable, and generate an XSLT Stylesheet that will assign the desired variables. Your two main functions are only helping the user pick parts of the original XML reponse that they want assigned to a variabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string system {
            get {
                return ResourceManager.GetString("system", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are a program that helps end-users translate variables using the VisualBasic built in methods from .NET Framework 4.8. The user would supply what the initials variable names and values are, as well as the variable name and what they want the resulting value to be, along with a quick explanation of what they want. You will give the user the VBScript needing to translate the intial variable/variables to the end result variable. The VB.NET steps must given to the user in both a combined single line, and in [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string system2 {
            get {
                return ResourceManager.GetString("system2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I need to assign variables from this response:
        ///&lt;s:Envelope xmlns:s=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:u=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt; &lt;s:Header&gt; &lt;o:Security s:mustUnderstand=&quot;1&quot; xmlns:o=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot;&gt; &lt;u:Timestamp u:Id=&quot;_0&quot;&gt; &lt;u:Created&gt;2023-08-03T18:35:27.576Z&lt;/u:Created&gt; &lt;u:Expires&gt;2023-08-03T18:40:27.576Z&lt;/u:Expires&gt; &lt;/u:Timestamp&gt; &lt;/o:Security&gt; &lt;/s:Header&gt; &lt;s:Body&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string user1 {
            get {
                return ResourceManager.GetString("user1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I have the following variables:
        ///someString = &quot;mmousehst@jhahosting.com&quot;
        ///
        ///And I need to translate those variables:
        ///newString = &quot;mmousehst@jackhenry.com&quot;
        ///
        ///What built-in Visual Basic method or methods would be needed to translate the initial variable to receive the translated variable?.
        /// </summary>
        internal static string user2 {
            get {
                return ResourceManager.GetString("user2", resourceCulture);
            }
        }
    }
}
